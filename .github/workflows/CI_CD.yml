name: Java CI with Gradle & Docker

# push와 PR이 발생했을 경우 실행
on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 브랜치 전환
      - name: Checkout
        uses: actions/checkout@v3

      #자바 버전 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Spring Boot 어플리케이션 Build
      - name: Spring Boot Build
        run: ./gradlew build

      # DockerHub Login
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Docker 이미지 Build
      - name: docker image build & docker Hub push
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # AWS 배포
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm -f
            sudo docker rmi tmdduq1999/spring:latest
            sudo docker-compose up -d
